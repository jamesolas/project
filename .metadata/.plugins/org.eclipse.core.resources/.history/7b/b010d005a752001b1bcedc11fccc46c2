package com.app.service.impl;

import com.app.dao.CustomerCrudDAO;
import com.app.dao.impl.CustomerCrudDAOImpl;
import com.app.exception.BusinessException;
import com.app.main.bankingMain;
import com.app.model.Customer;
import com.app.model.CustomerAccount;
import com.app.service.CustomerCrudService;
import org.apache.log4j.Logger;

public class CustomerCrudServiceImpl implements CustomerCrudService {
	private static Logger log = Logger.getLogger(CustomerCrudServiceImpl.class); 
	
	CustomerCrudDAOImpl dao = new CustomerCrudDAOImpl(); 
	//CustomerCrudDAO customerCrudDAO = new CustomerCrudDAOImpl();

	@Override
	public Customer createCustomer(String customerFirstName, String customerLastName, String customerEmail,
			String customerPassword) throws BusinessException {
		Customer customer = null;
		//customer = customerCrudDAO.createCustomer(customerFirstName, customerLastName, customerEmail, customerPassword);
		
		//code to DAO
		Customer c = new Customer(customerFirstName, customerLastName, customerEmail, customerPassword);
		if(dao.createCustomer(c) != 0) {
			log.info("Customer created successfully.");
		}
		return customer;
	}
	
	@Override
	public CustomerAccount createBalance(long accountBalance) throws BusinessException {
		CustomerAccount customerAccount = null;
		//code to DAO
		CustomerAccount c = new CustomerAccount(accountBalance);
		try {
			if(dao.createBalance(c) != 0) {
				log.info("Balance created successfully.");
			}
		} catch (BusinessException e) {
			log.info(e.getMessage());
		}		
		return customerAccount;
	}

	@Override
	public CustomerAccount deposit(long customerId, long amount) throws BusinessException {
		CustomerAccount customerAccount = null;
		//code to DAO
		CustomerAccount c = new CustomerAccount(customerId);
		try {
			if(dao.deposit(c) != 0) {
				log.info("Deposit was successful.");
			}
		} catch (BusinessException e) {
			log.info(e.getMessage());
		}		
		return customerAccount;
	}

	@Override
	public CustomerAccount withdraw(long customerId, long amount) throws BusinessException {
		CustomerAccount customerAccount = null;
		//code to DAO
		CustomerAccount c = new CustomerAccount(customerId);
		try {
			if(dao.withdraw(c) != 0) {
				log.info("Withdrawal was successful.");
			}
		} catch (BusinessException e) {
			log.info(e.getMessage());
		}		
		return customerAccount;
	}

	@Override
	public CustomerAccount sendMoney(long customerId, long amount, long receivingAccountNumber) throws BusinessException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public CustomerAccount receiveMoney(long customerId, long amount, long sendingAccountNumber) throws BusinessException {
		// TODO Auto-generated method stub
		return null;
	}
	


	
	
}
